1. Word Break
 Given a string s and a dictionary of words dict, determine if s can be segmented into a space-separated sequence of one or more dictionary words.

For example, given
s = "leetcode",
dict = ["leet", "code"].

Return true because "leetcode" can be segmented as "leet code".

    public boolean wordBreak(String s, Set<String> dict) {

        boolean[] f = new boolean[s.length() + 1];

        f[0] = true;


        /* First DP
        for(int i = 1; i <= s.length(); i++){
            for(String str: dict){
                if(str.length() <= i){
                    if(f[i - str.length()]){
                        if(s.substring(i-str.length(), i).equals(str)){
                            f[i] = true;
                            break;
                        }
                    }
                }
            }
        }*/

        //Second DP
        for(int i=1; i <= s.length(); i++){
            for(int j=0; j < i; j++){
                if(f[j] && dict.contains(s.substring(j, i))){
                    f[i] = true;
                    break;
                }
            }
        }

        return f[s.length()];
    }







2. Given input which is a vector of (user name, log-in time, log-out time), output time series which will have number of users logged in at each given time slot in the input,
 output should only contain time slots which are given in input for example if the input is
 "September", 1.2, 4.5),
("June", 3.1, 6.7),
("August", 8.9, 10.3)

output should contain only 1.2, 3.1, 4.5, 6.7, 8.9, 10.3

Example:
/*
[
("September", 1.2, 4.5),
("June", 3.1, 6.7),
("August", 8.9, 10.3)
]

=>

[(1.2, 1), (3.1, 2), (4.5, 1), (6.7, 0), (8.9, 1), (10.3, 0)]


3. Given an int array A, return an int array B
that A[i + B[i]] is the first element in A after A[i] that is greater than or equal to A[i]

Answer:
Sort A into another int array C [nlogn]. For each element of A from the index 0 to end,
find the next element in sorted array [logn], copy it to B[i] and then remove the A[i]
from the sorted array [this entire step: nlogn]. This will have the time and space complexity of O(nlogn) and O(n), respectively.


4.
Design a class that takes in a list of iterators and iterates in a round robin fashion.

5. Find the smallest number that can be generated by replacing two digits in an integer with one of the adjacent digits.


No Offer
Positive Experience
Average Interview
Application
I applied online. I interviewed at Google.

Interview
First round Technical Telephone Screen: Python Coding challenge in a shared google doc.

Phone interview - 45 min call with an engineer, 2 problems (one warm up, then a few min after for me to ask questions. All in all, thoroughly enjoyable. It felt more like pair-programming with the interviewer than like an interview.)

Interview Questions
1. Write a function that converts a dict to a JSON string.
input:
d['a1'] = 1
d['a2'] = "str"
d['a3'] = True
d['a4'] = {...}

output:
'{"a1":1,"a2":"str","a3":true,"a4":{"b1":...}}'

2. Write a function that determines if a list of integers is in the same order as a second list of integers.
• Do not assume the first list is distinct/unique
• Do assume the second list is.

s1: [6,4,2,8,9,6,2,2]
s2: [4,2,9]
output: True

